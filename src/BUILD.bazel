load("@npm_bazel_typescript//:defs.bzl", "ts_library", "ts_config")
load("@build_bazel_rules_nodejs//:defs.bzl", "nodejs_binary", "rollup_bundle")
load("@build_bazel_rules_nodejs//internal/web_package:web_package.bzl", "web_package")

package(default_visibility=["//:__subpackages__"])

ts_config(
    name = "tsconfig-server",
    src = "tsconfig.server.json",
    deps = ["//:tsconfig.json", "//src:tsconfig.app.json"]
)

ts_config(
    name = "tsconfig-app",
    src = "tsconfig.app.json",
    deps = ["//:tsconfig.json"]
)

ts_library(
    name = "routes",
    srcs = ["routes.ts"],
    deps = ["//src/lib/router"],
)

ts_library(
    name = "server_lib",
    srcs = glob(["*.server.ts"]),
    tsconfig = ":tsconfig-server",
    deps = [
        "@npm//@types",
        "@npm//express",
        "@npm//ivy-domino",
        "@npm//tslib",
        "//src/environments",
        "//src/lib/server",
        "//src/app",
        ":routes",
    ],
)

ts_library(
    name = "client_lib",
    srcs = ["main.ts"],
    tsconfig = ":tsconfig-server",
    deps = [
        "@npm//@types",
        "@npm//tslib",
        "//src/environments",
        "//src/lib/elements",
        "//src/lib/tsaction",
        "//src/lib/router",
        "//src/lib/utils",
        "//src/app",
        ":routes",
    ],
)

rollup_bundle(
    name = "bundle",
    entry_point = "src/main",
    native_es_modules = True,
    additional_entry_points = [
        "src/app/pages/about/about",
    ],
    deps = [
        ":client_lib",
        "@npm//@angular/common",
        "@npm//@angular/core",
        "@npm//@angular/platform-browser",
        "@npm//rxjs",
    ],
)

nodejs_binary(
    name = "server",
    data = [
        ":bundle_mjs",
        ":bundle.es6.js",
        ":server_lib",
        ":index.html",
        # TODO(alexeagle): why is this needed but express isn't?
        "@npm//ivy-domino",
        "//src/lib/elements",
    ],
    entry_point = "ivy_universal/src/main.server.js",    
)
